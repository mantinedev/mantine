[
  {
    "fileName": "AutocompleteSelectFirstOption.tsx",
    "language": "tsx",
    "code": "import { useState, useEffect } from 'react';\nimport { Combobox, TextInput, useCombobox } from '@mantine/core';\n\nconst groceries = [\n  '🍎 Apples',\n  '🍌 Bananas',\n  '🥦 Broccoli',\n  '🥕 Carrots',\n  '🍫 Chocolate',\n  '🍇 Grapes',\n];\n\nexport function AutocompleteSelectFirstOption() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n  });\n\n  const [value, setValue] = useState('');\n  const shouldFilterOptions = !groceries.some((item) => item === value);\n  const filteredOptions = shouldFilterOptions\n    ? groceries.filter((item) => item.toLowerCase().includes(value.toLowerCase().trim()))\n    : groceries;\n\n  const options = filteredOptions.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  useEffect(() => {\n    // we need to wait for options to render before we can select first one\n    combobox.selectFirstOption();\n  }, [value]);\n\n  return (\n    <Combobox\n      onOptionSubmit={(optionValue) => {\n        setValue(optionValue);\n        combobox.closeDropdown();\n      }}\n      store={combobox}\n      withinPortal={false}\n    >\n      <Combobox.Target>\n        <TextInput\n          label=\"Pick value or type anything\"\n          placeholder=\"Pick value or type anything\"\n          value={value}\n          onChange={(event) => {\n            setValue(event.currentTarget.value);\n            combobox.openDropdown();\n          }}\n          onClick={() => combobox.openDropdown()}\n          onFocus={() => combobox.openDropdown()}\n          onBlur={() => combobox.closeDropdown()}\n        />\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>\n          {options.length === 0 ? <Combobox.Empty>Nothing found</Combobox.Empty> : options}\n        </Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n"
  }
]