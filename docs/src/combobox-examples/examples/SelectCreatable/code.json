[
  {
    "fileName": "SelectCreatable.tsx",
    "language": "tsx",
    "code": "import { useState } from 'react';\nimport { Combobox, InputBase, useCombobox } from '@mantine/core';\n\nconst groceries = [\n  '🍎 Apples',\n  '🍌 Bananas',\n  '🥦 Broccoli',\n  '🥕 Carrots',\n  '🍫 Chocolate',\n  '🍇 Grapes',\n];\n\nexport function SelectCreatable() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n  });\n\n  const [data, setData] = useState(groceries);\n  const [value, setValue] = useState<string | null>(null);\n  const [search, setSearch] = useState('');\n\n  const exactOptionMatch = data.some((item) => item === search);\n  const filteredOptions = exactOptionMatch\n    ? data\n    : data.filter((item) => item.toLowerCase().includes(search.toLowerCase().trim()));\n\n  const options = filteredOptions.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      {item}\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      store={combobox}\n      withinPortal={false}\n      onOptionSubmit={(val) => {\n        if (val === '$create') {\n          setData((current) => [...current, search]);\n          setValue(search);\n        } else {\n          setValue(val);\n          setSearch(val);\n        }\n\n        combobox.closeDropdown();\n      }}\n    >\n      <Combobox.Target>\n        <InputBase\n          rightSection={<Combobox.Chevron />}\n          value={search}\n          onChange={(event) => {\n            combobox.openDropdown();\n            combobox.updateSelectedOptionIndex();\n            setSearch(event.currentTarget.value);\n          }}\n          onClick={() => combobox.openDropdown()}\n          onFocus={() => combobox.openDropdown()}\n          onBlur={() => {\n            combobox.closeDropdown();\n            setSearch(value || '');\n          }}\n          placeholder=\"Search value\"\n          rightSectionPointerEvents=\"none\"\n        />\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>\n          {options}\n          {!exactOptionMatch && search.trim().length > 0 && (\n            <Combobox.Option value=\"$create\">+ Create {search}</Combobox.Option>\n          )}\n        </Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n"
  }
]