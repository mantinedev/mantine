[
  {
    "fileName": "ButtonMultiSelect.tsx",
    "language": "tsx",
    "code": "import { useState } from 'react';\nimport { useCombobox, Combobox, Text, Button, Box, Group, CheckIcon } from '@mantine/core';\n\nconst groceries = [\n  '🍎 Apples',\n  '🍌 Bananas',\n  '🥦 Broccoli',\n  '🥕 Carrots',\n  '🍫 Chocolate',\n  '🍇 Grapes',\n];\n\nexport function ButtonMultiSelect() {\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n  });\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item} key={item}>\n      <Group>\n        {selectedItems.includes(item) && <CheckIcon size={12} />}\n        <span>{item}</span>\n      </Group>\n    </Combobox.Option>\n  ));\n\n  return (\n    <>\n      <Box mb=\"xs\">\n        <Text span size=\"sm\" c=\"dimmed\">\n          Selected item:{' '}\n        </Text>\n\n        <Text span size=\"sm\">\n          {selectedItems.length > 0 ? selectedItems.join(', ') : 'Nothing selected'}\n        </Text>\n      </Box>\n\n      <Combobox\n        store={combobox}\n        width={250}\n        position=\"bottom-start\"\n        withArrow\n        withinPortal={false}\n        positionDependencies={[selectedItems]}\n        onOptionSubmit={(val) => {\n          setSelectedItems((current) =>\n            current.includes(val) ? current.filter((item) => item !== val) : [...current, val]\n          );\n        }}\n      >\n        <Combobox.Target>\n          <Button onClick={() => combobox.toggleDropdown()}>Pick item</Button>\n        </Combobox.Target>\n\n        <Combobox.Dropdown>\n          <Combobox.Options>{options}</Combobox.Options>\n        </Combobox.Dropdown>\n      </Combobox>\n    </>\n  );\n}\n"
  }
]