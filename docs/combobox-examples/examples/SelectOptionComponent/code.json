[
  {
    "fileName": "SelectOptionComponent.tsx",
    "language": "tsx",
    "code": "\nimport { Combobox, InputBase, Input, useCombobox, Group, Text } from '@mantine/core';\n\ninterface Item {\n  emoji: string;\n  value: string;\n  description: string;\n}\n\nconst groceries: Item[] = [\n  { emoji: 'üçé', value: 'Apples', description: 'Crisp and refreshing fruit' },\n  { emoji: 'üçå', value: 'Bananas', description: 'Naturally sweet and potassium-rich fruit' },\n  { emoji: 'ü•¶', value: 'Broccoli', description: 'Nutrient-packed green vegetable' },\n  { emoji: 'ü•ï', value: 'Carrots', description: 'Crunchy and vitamin-rich root vegetable' },\n  { emoji: 'üç´', value: 'Chocolate', description: 'Indulgent and decadent treat' },\n];\n\nfunction SelectOption({ emoji, value, description }: Item) {\n  return (\n    <Group>\n      <Text fz={20}>{emoji}</Text>\n      <div>\n        <Text fz=\"sm\" fw={500}>\n          {value}\n        </Text>\n        <Text fz=\"xs\" opacity={0.6}>\n          {description}\n        </Text>\n      </div>\n    </Group>\n  );\n}\n\nexport function SelectOptionComponent() {\n  const combobox = useCombobox({\n    onDropdownClose: () => combobox.resetSelectedOption(),\n  });\n\n  const [value, setValue] = useState<string | null>(null);\n  const selectedOption = groceries.find((item) => item.value === value);\n\n  const options = groceries.map((item) => (\n    <Combobox.Option value={item.value} key={item.value}>\n      <SelectOption {...item} />\n    </Combobox.Option>\n  ));\n\n  return (\n    <Combobox\n      store={combobox}\n      withinPortal={false}\n      onOptionSubmit={(val) => {\n        setValue(val);\n        combobox.closeDropdown();\n      }}\n    >\n      <Combobox.Target>\n        <InputBase\n          component=\"button\"\n          type=\"button\"\n          pointer\n          rightSection={<Combobox.Chevron />}\n          onClick={() => combobox.toggleDropdown()}\n          rightSectionPointerEvents=\"none\"\n          multiline\n        >\n          {selectedOption ? (\n            <SelectOption {...selectedOption} />\n          ) : (\n            <Input.Placeholder>Pick value</Input.Placeholder>\n          )}\n        </InputBase>\n      </Combobox.Target>\n\n      <Combobox.Dropdown>\n        <Combobox.Options>{options}</Combobox.Options>\n      </Combobox.Dropdown>\n    </Combobox>\n  );\n}\n"
  }
]