.root {
  position: relative;
}

.viewport {
  height: var(--carousel-height, auto);
  overflow: hidden;
}

.container {
  display: flex;
  flex-direction: var(--_container-direction, row);
  height: var(--carousel-height, auto);
  margin-right: var(--_container-mr);
  margin-left: var(--_container-ml);
  margin-bottom: var(--_container-mb);

  [data-include-gap-in-size] & {
    &[data-orientation='vertical'] {
      --_container-mb: calc(var(--carousel-slide-gap) * -1);
    }

    &[data-orientation='horizontal'] {
      --_container-mr: calc(var(--carousel-slide-gap) * -1);

      @mixin rtl {
        --_container-ml: calc(var(--carousel-slide-gap) * -1);
        --_container-mr: 0;
      }
    }
  }

  &[data-orientation='vertical'] {
    --_container-direction: column;
  }
}

.controls {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  z-index: 1;
  pointer-events: none;
  flex-direction: var(--_controls-direction);
  left: var(--_controls-left);
  right: var(--_controls-right);
  top: var(--_controls-top);
  bottom: var(--_controls-bottom);
  padding: var(--_controls-padding);

  .root[data-orientation='vertical'] & {
    --_controls-left: calc(50% - var(--carousel-control-size) / 2);
    --_controls-top: 0;
    --_controls-bottom: 0;
    --_controls-direction: column;
    --_controls-padding: var(--carousel-controls-offset) 0;
  }

  .root[data-orientation='horizontal'] & {
    --_controls-left: 0;
    --_controls-right: 0;
    --_controls-top: calc(50% - var(--carousel-control-size) / 2);
    --_controls-direction: row;
    --_controls-padding: 0 var(--carousel-controls-offset);
  }
}

.control {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: var(--carousel-control-size);
  min-height: var(--carousel-control-size);
  border-radius: var(--carousel-control-size);
  pointer-events: all;
  background-color: var(--mantine-color-white);
  color: var(--mantine-color-black);
  box-shadow: var(--mantine-shadow-md);
  opacity: var(--_control-opacity);
  border: rem(1px) solid var(--mantine-color-gray-3);
  transition: opacity 100ms ease;

  @mixin light {
    --_control-opacity: 0.85;
  }

  @mixin dark {
    --_control-opacity: 0.65;
  }

  @mixin hover {
    --_control-opacity: 1;
  }
}

.indicators {
  position: absolute;
  display: flex;
  justify-content: center;
  gap: rem(8px);
  pointer-events: none;
  flex-direction: var(--_indicators-direction);
  bottom: var(--_indicators-bottom);
  left: var(--_indicators-left);
  right: var(--_indicators-right);
  top: var(--_indicators-top);

  .root[data-orientation='vertical'] & {
    --_indicators-bottom: 0;
    --_indicators-top: 0;
    --_indicators-right: var(--mantine-spacing-md);
    --_indicators-direction: column;
  }

  .root[data-orientation='horizontal'] & {
    --_indicators-bottom: var(--mantine-spacing-md);
    --_indicators-left: 0;
    --_indicators-right: 0;
    --_indicators-direction: row;
  }
}

.indicator {
  pointer-events: all;
  width: var(--_indicator-width);
  height: var(--_indicator-height);
  border-radius: var(--mantine-radius-xl);
  box-shadow: var(--mantine-shadow-sm);
  opacity: var(--_indicator-opacity, 0.6);
  background-color: var(--mantine-color-white);

  @mixin hover {
    --_indicator-opacity: 1;
  }

  &[data-active] {
    --_indicator-opacity: 1;
  }

  .root[data-orientation='vertical'] & {
    --_indicator-width: rem(5px);
    --_indicator-height: rem(25px);
  }

  .root[data-orientation='horizontal'] & {
    --_indicator-width: rem(25px);
    --_indicator-height: rem(5px);
  }
}

.slide {
  position: relative;
  flex: 0 0 var(--carousel-slide-size);
  padding-right: var(--_slide-pr, 0);
  padding-left: var(--_slide-pl, 0);
  padding-bottom: var(--_slide-pb, 0);
  margin-right: var(--_slide-mr, 0);
  margin-left: var(--_slide-ml, 0);
  margin-bottom: var(--_slide-mb, 0);

  .root[data-include-gap-in-size] & {
    &[data-orientation='vertical'] {
      --_slide-pb: var(--carousel-slide-gap);
    }

    &[data-orientation='horizontal'] {
      --_slide-pr: var(--carousel-slide-gap);

      @mixin rtl {
        --_slide-pl: var(--carousel-slide-gap);
        --_slide-pr: 0;
      }
    }
  }

  .root:not([data-include-gap-in-size]) & {
    &[data-orientation='vertical'] {
      --_slide-mb: var(--carousel-slide-gap);
    }

    &[data-orientation='horizontal'] {
      --_slide-mr: var(--carousel-slide-gap);

      @mixin rtl {
        --_slide-ml: var(--carousel-slide-gap);
        --_slide-mr: 0;
      }
    }
  }
}
