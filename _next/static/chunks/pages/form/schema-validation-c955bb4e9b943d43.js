(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[75756],{1798:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","license","License",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},6620:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","code","Code",[["path",{d:"M7 8l-4 4l4 4",key:"svg-0"}],["path",{d:"M17 8l4 4l-4 4",key:"svg-1"}],["path",{d:"M14 4l-4 16",key:"svg-2"}]])},6892:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","pencil","Pencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},24583:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","arrow-left","ArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},34891:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","adjustments","Adjustments",[["path",{d:"M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-0"}],["path",{d:"M6 4v4",key:"svg-1"}],["path",{d:"M6 12v8",key:"svg-2"}],["path",{d:"M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-3"}],["path",{d:"M12 4v10",key:"svg-4"}],["path",{d:"M12 18v2",key:"svg-5"}],["path",{d:"M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-6"}],["path",{d:"M18 4v1",key:"svg-7"}],["path",{d:"M18 9v11",key:"svg-8"}]])},35557:(e,n,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/form/schema-validation",function(){return t(46089)}])},41949:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","calendar","Calendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},46089:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>m});var s=t(6029),a=t(16285),r=t(38547),o=t(5262);let i=(0,r.P)(o.XZ.formSchemaValidation);function l(e){let n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{InstallScript:t}=n;return t||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("InstallScript",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"schema-based-validation",children:"Schema based validation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"@mantine/form"})," supports schema validation with:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/zod",children:"zod"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/joi",children:"joi"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/yup",children:"yup"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/superstruct",children:"superstruct"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/valibot",children:"valibot"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You need to install one of the libraries yourself, ",(0,s.jsx)(n.code,{children:"@mantine/form"})," package does not depend on any of them.\nIf you do not know what schema validation library to choose, use ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/zod",children:"zod"}),",\nit is the most modern and developer-friendly library."]}),"\n",(0,s.jsx)(n.h2,{id:"zod",children:"zod"}),"\n",(0,s.jsx)(n.p,{children:"Installation:"}),"\n",(0,s.jsx)(t,{packages:"zod mantine-form-zod-resolver"}),"\n",(0,s.jsx)(n.p,{children:"Basic fields validation with zod v3:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { zodResolver } from 'mantine-form-zod-resolver';\nimport { z } from 'zod';\nimport { useForm } from '@mantine/form';\n\nconst schema = z.object({\n  name: z\n    .string()\n    .min(2, { message: 'Name should have at least 2 letters' }),\n  email: z.string().email({ message: 'Invalid email' }),\n  age: z.number().min(18, {\n    message: 'You must be at least 18 to create an account',\n  }),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: zodResolver(schema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  name: 'Name should have at least 2 letters',\n//  email: 'Invalid email',\n//  age: 'You must be at least 18 to create an account'\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Nested fields validation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { zodResolver } from 'mantine-form-zod-resolver';\nimport { z } from 'zod';\nimport { useForm } from '@mantine/form';\n\nconst nestedSchema = z.object({\n  nested: z.object({\n    field: z\n      .string()\n      .min(2, { message: 'Field should have at least 2 letters' }),\n  }),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    nested: {\n      field: '',\n    },\n  },\n  validate: zodResolver(nestedSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'nested.field': 'Field should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"List fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { zodResolver } from 'mantine-form-zod-resolver';\nimport { z } from 'zod';\nimport { useForm } from '@mantine/form';\n\nconst listSchema = z.object({\n  list: z.array(\n    z.object({\n      name: z\n        .string()\n        .min(2, { message: 'Name should have at least 2 letters' }),\n    })\n  ),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    list: [{ name: '' }],\n  },\n  validate: zodResolver(listSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'list.0.name': 'Name should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"zod-v4",children:"zod v4"}),"\n",(0,s.jsx)(n.p,{children:"To use zod 4:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Update ",(0,s.jsx)(n.code,{children:"mantine-form-zod-resolver"})," to ",(0,s.jsx)(n.code,{children:"1.2.0"})," or later version"]}),"\n",(0,s.jsxs)(n.li,{children:["Update zod to version ",(0,s.jsx)(n.code,{children:"3.25.0"})," or later"]}),"\n",(0,s.jsxs)(n.li,{children:["Replace ",(0,s.jsx)(n.code,{children:"zod"})," imports with ",(0,s.jsx)(n.code,{children:"zod/v4"})," (only if you have ",(0,s.jsx)(n.code,{children:"zod@3"})," in your ",(0,s.jsx)(n.code,{children:"package.json"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["Replace ",(0,s.jsx)(n.code,{children:"zodResolver"})," with ",(0,s.jsx)(n.code,{children:"zod4Resolver"})," in your code"]}),"\n",(0,s.jsx)(n.li,{children:"All other code remains the same"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example with zod v4:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { z } from 'zod/v4';\nimport { zod4Resolver } from 'mantine-form-zod-resolver';\n\nconst schema = z.object({\n  name: z.string().min(2, { error: 'Name should have at least 2 letters' }),\n  email: z.email({ error: 'Invalid email' }),\n  age: z.number().min(18, { error: 'You must be at least 18 to create an account' }),\n});\n\nconst form = useForm({\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: zod4Resolver(schema),\n})\n"})}),"\n",(0,s.jsx)(n.h2,{id:"yup",children:"yup"}),"\n",(0,s.jsx)(n.p,{children:"Installation:"}),"\n",(0,s.jsx)(t,{packages:"yup mantine-form-yup-resolver"}),"\n",(0,s.jsx)(n.p,{children:"Basic fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { yupResolver } from 'mantine-form-yup-resolver';\nimport * as yup from 'yup';\nimport { useForm } from '@mantine/form';\n\nconst schema = yup.object().shape({\n  name: yup.string().min(2, 'Name should have at least 2 letters'),\n  email: yup\n    .string()\n    .required('Invalid email')\n    .email('Invalid email'),\n  age: yup\n    .number()\n    .min(18, 'You must be at least 18 to create an account'),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: yupResolver(schema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  name: 'Name should have at least 2 letters',\n//  email: 'Invalid email',\n//  age: 'You must be at least 18 to create an account'\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Nested fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { yupResolver } from 'mantine-form-yup-resolver';\nimport * as yup from 'yup';\nimport { useForm } from '@mantine/form';\n\nconst nestedSchema = yup.object().shape({\n  nested: yup.object().shape({\n    field: yup\n      .string()\n      .min(2, 'Field should have at least 2 letters'),\n  }),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    nested: {\n      field: '',\n    },\n  },\n  validate: yupResolver(nestedSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'nested.field': 'Field should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"List fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { yupResolver } from 'mantine-form-yup-resolver';\nimport * as yup from 'yup';\nimport { useForm } from '@mantine/form';\n\nconst listSchema = yup.object().shape({\n  list: yup.array().of(\n    yup.object().shape({\n      name: yup\n        .string()\n        .min(2, 'Name should have at least 2 letters'),\n    })\n  ),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    list: [{ name: '' }],\n  },\n  validate: yupResolver(listSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'list.0.name': 'Name should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"joi",children:"joi"}),"\n",(0,s.jsx)(n.p,{children:"Installation:"}),"\n",(0,s.jsx)(t,{packages:"joi mantine-form-joi-resolver"}),"\n",(0,s.jsx)(n.p,{children:"Basic fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Joi from 'joi';\nimport { joiResolver } from 'mantine-form-joi-resolver';\nimport { useForm } from '@mantine/form';\n\nconst schema = Joi.object({\n  name: Joi.string().min(2).messages({\n    'string.min': 'Name should have at least 2 letters',\n    'string.empty': 'Name should have at least 2 letters',\n  }),\n  email: Joi.string()\n    .email({ tlds: { allow: false } })\n    .messages({\n      'string.email': 'Invalid email',\n      'string.empty': 'Invalid email',\n    }),\n  age: Joi.number()\n    .min(18)\n    .message('You must be at least 18 to create an account'),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: joiResolver(schema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  name: 'Name should have at least 2 letters',\n//  email: 'Invalid email',\n//  age: 'You must be at least 18 to create an account'\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Nested fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Joi from 'joi';\nimport { joiResolver } from 'mantine-form-joi-resolver';\nimport { useForm } from '@mantine/form';\n\nconst nestedSchema = Joi.object({\n  nested: Joi.object({\n    field: Joi.string().min(2).messages({\n      'string.min': 'Field should have at least 2 letters',\n      'string.empty': 'Field should have at least 2 letters',\n    }),\n  }),\n});\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    nested: {\n      field: '',\n    },\n  },\n  validate: joiResolver(nestedSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'nested.field': 'Field should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"List fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import Joi from 'joi';\nimport { joiResolver } from 'mantine-form-joi-resolver';\nimport { useForm } from '@mantine/form';\n\nconst listSchema = Joi.object({\n  list: Joi.array().items(\n    Joi.object({\n      name: Joi.string().min(2).messages({\n        'string.min': 'Name should have at least 2 letters',\n        'string.empty': 'Name should have at least 2 letters',\n      }),\n    })\n  ),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    list: [{ name: '' }],\n  },\n  validate: joiResolver(listSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'list.0.name': 'Name should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"superstruct",children:"superstruct"}),"\n",(0,s.jsx)(n.p,{children:"Installation:"}),"\n",(0,s.jsx)(t,{packages:"superstruct mantine-form-superstruct-resolver"}),"\n",(0,s.jsx)(n.p,{children:"Basic fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import isEmail from 'is-email';\nimport { superstructResolver } from 'mantine-form-superstruct-resolver';\nimport * as s from 'superstruct';\n\nconst emailString = s.define('email', isEmail);\n\nconst schema = s.object({\n  name: s.size(s.string(), 2, 30),\n  email: emailString,\n  age: s.min(s.number(), 18),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: superstructResolver(schema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//   name: 'name: Expected a string with a length between `2` and `30` but received one with a length of `0`',\n//   email: 'email: Expected a value of type `email`, but received: `\"\"`',\n//   age: 'age: Expected a number greater than or equal to 18 but received `16`',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Nested fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { superstructResolver } from 'mantine-form-superstruct-resolver';\nimport * as s from 'superstruct';\nimport { useForm } from '@mantine/form';\n\nconst nestedSchema = s.object({\n  nested: s.object({\n    field: s.size(s.string(), 2, 30),\n  }),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    nested: {\n      field: '',\n    },\n  },\n  validate: superstructResolver(nestedSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'nested.field': 'nested field: Expected a string with a length between `2` and `30` but received one with a length of `0`',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"List fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { superstructResolver } from 'mantine-form-superstruct-resolver';\nimport * as s from 'superstruct';\nimport { useForm } from '@mantine/form';\n\nconst listSchema = s.object({\n  list: s.array(\n    s.object({\n      name: s.size(s.string(), 2, 30),\n    })\n  ),\n});\n\nconst form = useForm({\n  mode: 'uncontrolled',\n  initialValues: {\n    list: [{ name: '' }],\n  },\n  validate: superstructResolver(listSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'list 0 name: Expected a string with a length between `2` and `30` but received one with a length of `0`',\n// }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"valibot",children:"valibot"}),"\n",(0,s.jsx)(n.p,{children:"Installation:"}),"\n",(0,s.jsx)(t,{packages:"valibot mantine-form-valibot-resolver"}),"\n",(0,s.jsx)(n.p,{children:"Basic fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { valibotResolver } from 'mantine-form-valibot-resolver';\nimport * as v from 'valibot';\nimport { useForm } from '@mantine/form';\n\nconst schema = v.object({\n  name: v.pipe(\n    v.string(),\n    v.minLength(2, 'Name should have at least 2 letters')\n  ),\n  email: v.pipe(v.string(), v.email('Invalid email')),\n  age: v.pipe(\n    v.number(),\n    v.minValue(18, 'You must be at least 18 to create an account')\n  ),\n});\n\nconst form = useForm({\n  initialValues: {\n    name: '',\n    email: '',\n    age: 16,\n  },\n  validate: valibotResolver(schema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  name: 'Name should have at least 2 letters',\n//  email: 'Invalid email',\n//  age: 'You must be at least 18 to create an account'\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Nested fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { valibotResolver } from 'mantine-form-valibot-resolver';\nimport * as v from 'valibot';\nimport { useForm } from '@mantine/form';\n\nconst nestedSchema = v.object({\n  nested: v.object({\n    field: v.pipe(\n      v.string(),\n      v.minLength(2, 'Field should have at least 2 letters')\n    ),\n  }),\n});\n\nconst form = useForm({\n  initialValues: {\n    nested: {\n      field: '',\n    },\n  },\n  validate: valibotResolver(nestedSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'nested.field': 'Field should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"List fields validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { valibotResolver } from 'mantine-form-valibot-resolver';\nimport * as v from 'valibot';\nimport { useForm } from '@mantine/form';\n\nconst listSchema = v.object({\n  list: v.array(\n    v.object({\n      name: v.pipe(\n        v.string(),\n        v.minLength(2, 'Name should have at least 2 letters')\n      ),\n    })\n  ),\n});\n\nconst form = useForm({\n  initialValues: {\n    list: [{ name: '' }],\n  },\n  validate: valibotResolver(listSchema),\n});\n\nform.validate();\nform.errors;\n// -> {\n//  'list.0.name': 'Name should have at least 2 letters',\n// }\n"})}),"\n",(0,s.jsx)(n.p,{children:"With TypeScript:"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"InferInput"})," type from the ",(0,s.jsx)(n.code,{children:"valibot"})," library to get the type of the form data."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { valibotResolver } from 'mantine-form-valibot-resolver';\nimport * as v from 'valibot';\nimport { useForm } from '@mantine/form';\n\nexport const userSchema = v.object({\n  email: v.pipe(v.string(), v.email()),\n});\n\ntype FormData = v.InferInput<typeof userSchema>;\n\nconst form = useForm<FormData>({\n  initialValues: {\n    email: '',\n  },\n  validate: valibotResolver(userSchema),\n});\n"})})]})}function m(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})})}},65433:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","switch-2","Switch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},84276:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","file-text","FileText",[["path",{d:"M14 3v4a1 1 0 0 0 1 1h4",key:"svg-0"}],["path",{d:"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z",key:"svg-1"}],["path",{d:"M9 9l1 0",key:"svg-2"}],["path",{d:"M9 13l6 0",key:"svg-3"}],["path",{d:"M9 17l6 0",key:"svg-4"}]])},88992:(e,n,t)=>{"use strict";t.d(n,{A:()=>s});let s=(0,t(41495).A)("outline","arrow-right","ArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])}},e=>{e.O(0,[38547,90636,46593,38792],()=>e(e.s=35557)),_N_E=e.O()}]);