(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4681],{36:(e,t,n)=>{"use strict";n.d(t,{w:()=>c});var s=n(6029),i=n(4349),a=n(76320),l=n(8440),o=n(55729);let r=`
import { useListState, randomId } from '@mantine/hooks';
import { Checkbox } from '@mantine/core';

const initialValues = [
  { label: 'Receive email notifications', checked: false, key: randomId() },
  { label: 'Receive sms notifications', checked: false, key: randomId() },
  { label: 'Receive push notifications', checked: false, key: randomId() },
];

export function IndeterminateCheckbox() {
  const [values, handlers] = useListState(initialValues);

  const allChecked = values.every((value) => value.checked);
  const indeterminate = values.some((value) => value.checked) && !allChecked;

  const items = values.map((value, index) => (
    <Checkbox
      mt="xs"
      ml={33}
      label={value.label}
      key={value.key}
      checked={value.checked}
      onChange={(event) => handlers.setItemProp(index, 'checked', event.currentTarget.checked)}
    />
  ));

  return (
    <>
      <Checkbox
        checked={allChecked}
        indeterminate={indeterminate}
        label="Receive all notifications"
        onChange={() =>
          handlers.setState((current) =>
            current.map((value) => ({ ...value, checked: !allChecked }))
          )
        }
      />
      {items}
    </>
  );
}
`,d=[{label:"Receive email notifications",checked:!1,key:(0,l.z)()},{label:"Receive sms notifications",checked:!1,key:(0,l.z)()},{label:"Receive push notifications",checked:!1,key:(0,l.z)()}],c={type:"code",code:r,component:function(){let[e,t]=function(e=[]){let[t,n]=(0,o.useState)(e);return[t,{setState:n,append:(...e)=>n(t=>[...t,...e]),prepend:(...e)=>n(t=>[...e,...t]),insert:(e,...t)=>n(n=>[...n.slice(0,e),...t,...n.slice(e)]),pop:()=>n(e=>{let t=[...e];return t.pop(),t}),shift:()=>n(e=>{let t=[...e];return t.shift(),t}),apply:e=>n(t=>t.map((t,n)=>e(t,n))),applyWhere:(e,t)=>n(n=>n.map((n,s)=>e(n,s)?t(n,s):n)),remove:(...e)=>n(t=>t.filter((t,n)=>!e.includes(n))),reorder:({from:e,to:t})=>n(n=>{let s=[...n],i=n[e];return s.splice(e,1),s.splice(t,0,i),s}),swap:({from:e,to:t})=>n(n=>{let s=[...n],i=s[e],a=s[t];return s.splice(t,1,i),s.splice(e,1,a),s}),setItem:(e,t)=>n(n=>{let s=[...n];return s[e]=t,s}),setItemProp:(e,t,s)=>n(n=>{let i=[...n];return i[e]={...i[e],[t]:s},i}),filter:e=>{n(t=>t.filter(e))}}]}(d),n=e.every(e=>e.checked),l=e.some(e=>e.checked)&&!n,r=e.map((e,n)=>(0,s.jsx)(i.S,{mt:"xs",ml:33,label:e.label,checked:e.checked,onChange:e=>t.setItemProp(n,"checked",e.currentTarget.checked)},e.key));return(0,s.jsxs)(a.a,{maw:400,mx:"auto",children:[(0,s.jsx)(i.S,{checked:n,indeterminate:l,label:"Receive all notifications",onChange:()=>t.setState(e=>e.map(e=>({...e,checked:!n})))}),r]})}}},1798:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","license","License",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},6620:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","code","Code",[["path",{d:"M7 8l-4 4l4 4",key:"svg-0"}],["path",{d:"M17 8l4 4l-4 4",key:"svg-1"}],["path",{d:"M14 4l-4 16",key:"svg-2"}]])},6892:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","pencil","Pencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},16151:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-list-state",function(){return n(83104)}])},24583:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","arrow-left","ArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},34891:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","adjustments","Adjustments",[["path",{d:"M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-0"}],["path",{d:"M6 4v4",key:"svg-1"}],["path",{d:"M6 12v8",key:"svg-2"}],["path",{d:"M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-3"}],["path",{d:"M12 4v10",key:"svg-4"}],["path",{d:"M12 18v2",key:"svg-5"}],["path",{d:"M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-6"}],["path",{d:"M18 4v1",key:"svg-7"}],["path",{d:"M18 9v11",key:"svg-8"}]])},41949:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","calendar","Calendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},65433:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","switch-2","Switch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},83104:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c});var s=n(6029),i=n(16285),a=n(36),l=n(38547),o=n(5262);let r=(0,l.P)(o.XZ.useListState);function d(e){let t={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Demo:n}=t;return n||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"use-list-state"})," provides an API to work with list state:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { useListState } from '@mantine/hooks';\n\nconst [values, handlers] = useListState([{ a: 1 }]);\n\n// add one or more items to the end of the list\nconst append = () => handlers.append({ a: 2 });\n// values -> [{ a: 1 }, { a: 2 }]\n\n// add one or more items to the start of the list\nconst prepend = () => handlers.prepend({ a: 3 }, { a: 4 });\n// values -> [{ a: 3 }, { a: 4 }, { a: 1 }, { a: 2 }]\n\n// remove items at given positions\nconst remove = () => handlers.remove(0, 2);\n// values -> [{ a: 4 }, { a: 2 }]\n\n// insert one or more items at given position\nconst insert = () => handlers.insert(1, { a: 5 });\n// values -> [{ a: 4 }, { a: 5 }, { a: 2 }]\n\n// apply function to each element of the list\nconst apply = () =>\n  handlers.apply((item, index) => ({ a: item.a * index }));\n// values -> [{ a: 0 }, { a: 5 }, { a: 4 }]\n\n// move item from one position to another\nconst reorder = () => handlers.reorder({ from: 2, to: 0 });\n// values -> [{ a: 4 }, { a: 0 }, { a: 5 }]\n\n// swap items positions\nconst swap = () => handlers.swap({ from: 0, to: 2 });\n// values -> [{ a: 5 }, { a: 0 }, { a: 4 }]\n\n// apply function to each element that matches condition\nconst applyWhere = () =>\n  handlers.applyWhere(\n    (item) => item.a > 0,\n    (item) => ({ a: item.a + 2 })\n  );\n// values -> [{ a: 7 }, { a: 0 }, { a: 6 }]\n\n// set entirely new state\nconst setState = () => handlers.setState([{ a: 6 }, { a: 7 }]);\n// values -> [{ a: 6 }, { a: 7 }]\n\n// set individual item at given position\nconst setItem = () => handlers.setItem(0, { a: 8 });\n// values -> [{ a: 8 }, { a: 7 }]\n\n// set item property at given position\nconst setItemProp = () => handlers.setItemProp(1, 'a', 'new-prop');\n// values -> [{ a: 8 }, { a: 'new-prop' }]\n\n// filter objects that have a = 'new-prop'\nconst filter = () => handlers.filter((item) => item.a === 'new-prop');\n// values -> [{ a: 'new-prop' }]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"use-list-state"})," takes an array as a single argument and\nreturns a list of values and handlers to change them in a tuple, similar to ",(0,s.jsx)(t.code,{children:"useState"})," hook."]}),"\n",(0,s.jsx)(t.p,{children:"The hook provides handlers to work with array data:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"append"})," – add items to the end of the list"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"prepend"})," – add items to the start of the list"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"pop"})," – remove last item"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"shift"})," – remove first item"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"insert"})," – insert items at given index"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"remove"})," – remove items at given indices"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"reorder"})," – move item from one position to another"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"swap"})," – swap items positions"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"apply"})," – apply given function to all items in the list"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"applyWhere"})," - apply given function to selective items using condition"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"setItem"})," – replace item at given index"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"setItemProp"})," – set item property at given index"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"setState"})," – set list state with react action"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"filter"})," - filter values with callback function"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"indeterminate-state-checkbox-example",children:"Indeterminate state checkbox example"}),"\n",(0,s.jsx)(n,{data:a.w,demoProps:{toggle:!0}}),"\n",(0,s.jsx)(t.h2,{id:"useliststatehandlers-type",children:"UseListStateHandlers type"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"@mantine/hooks"})," package exports ",(0,s.jsx)(t.code,{children:"UseListStateHandlers"}),". It is a generic type\nthat contains all handlers from ",(0,s.jsx)(t.code,{children:"useListState"})," hook. It can be used to type\nhandlers in your components."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"UseListStateHandlers"})," type:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"export interface UseListStateHandlers<T> {\n  setState: React.Dispatch<React.SetStateAction<T[]>>;\n  append: (...items: T[]) => void;\n  prepend: (...items: T[]) => void;\n  insert: (index: number, ...items: T[]) => void;\n  pop: () => void;\n  shift: () => void;\n  apply: (fn: (item: T, index?: number) => T) => void;\n  applyWhere: (\n    condition: (item: T, index: number) => boolean,\n    fn: (item: T, index?: number) => T\n  ) => void;\n  remove: (...indices: number[]) => void;\n  reorder: ({ from, to }: { from: number; to: number }) => void;\n  swap: ({ from, to }: { from: number; to: number }) => void;\n  setItem: (index: number, item: T) => void;\n  setItemProp: <K extends keyof T, U extends T[K]>(\n    index: number,\n    prop: K,\n    value: U\n  ) => void;\n  filter: (fn: (item: T, i: number) => boolean) => void;\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The type is useful when you want to pass ",(0,s.jsx)(t.code,{children:"use-list-state"})," handlers to child components\nas a prop:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { UseListStateHandlers } from '@mantine/hooks';\n\ninterface Props {\n  handlers: UseListStateHandlers<string>;\n}\n\nfunction Demo({ handlers }: Props) {\n  return (\n    <button type=\"button\" onClick={() => handlers.append('hello')}>\n      Append hello\n    </button>\n  );\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"set-item-type",children:"Set item type"}),"\n",(0,s.jsxs)(t.p,{children:["By default, ",(0,s.jsx)(t.code,{children:"use-list-state"})," will use type from ",(0,s.jsx)(t.code,{children:"initialValues"}),".\nIf you call the hook with an empty array, you must specify item type:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import { useListState } from '@mantine/hooks';\n\nuseListState(['hello']); // ok, item type is string\nuseListState([]); // not ok, item type is any\nuseListState<string>([]); // ok, item type is string\n"})}),"\n",(0,s.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"function useListState<T>(\n  initialValue?: T[]\n): [T[], UseListStateHandlers<T>];\n"})}),"\n",(0,s.jsx)(t.h2,{id:"exported-types",children:"Exported types"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"UseListStateHandlers"})," type is exported from ",(0,s.jsx)(t.code,{children:"@mantine/hooks"})," package,\nyou can import it in your application:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"import type { UseListStateHandlers } from '@mantine/hooks';\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})})}},84276:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","file-text","FileText",[["path",{d:"M14 3v4a1 1 0 0 0 1 1h4",key:"svg-0"}],["path",{d:"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z",key:"svg-1"}],["path",{d:"M9 9l1 0",key:"svg-2"}],["path",{d:"M9 13l6 0",key:"svg-3"}],["path",{d:"M9 17l6 0",key:"svg-4"}]])},88992:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","arrow-right","ArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])}},e=>{e.O(0,[38547,90636,46593,38792],()=>e(e.s=16151)),_N_E=e.O()}]);