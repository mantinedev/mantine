(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[96574],{86011:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>d});var o=s(6029),t=s(16285),r=s(3910),u=s(38547),c=s(5262);let i=(0,u.P)(c.XZ.useFocusReturn);function a(e){let n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components},{Demo:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Demo",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"use-focus-return"})," automatically returns focus to the last focused element when a given condition is met.\nFor example, it is used in ",(0,o.jsx)(n.a,{href:"/core/modal/",children:"Modal"})," component to restore focus after the modal was closed."]}),"\n",(0,o.jsxs)(n.p,{children:["Close the modal with the ",(0,o.jsx)(n.code,{children:"Escape"})," key and see how focus returns to the button after the modal closes:"]}),"\n",(0,o.jsx)(s,{data:r.C,demoProps:{toggle:!0}}),"\n",(0,o.jsxs)(n.p,{children:["In most cases, you should use this hook with ",(0,o.jsx)(n.a,{href:"/hooks/use-focus-trap/",children:"use-focus-trap"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useFocusReturn } from '@mantine/hooks';\n\nuseFocusReturn({\n  // Is region with focus trap active?\n  // When it activates hook saves document.activeElement to the internal state\n  // and focuses this element once focus trap is deactivated\n  opened: false,\n\n  // Determines whether focus should be returned automatically, true by default\n  shouldReturnFocus: true,\n});\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"shouldReturnFocus"})," option is set to ",(0,o.jsx)(n.code,{children:"false"})," you can call returned function to focus last active element:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useFocusReturn } from '@mantine/hooks';\n\nconst returnFocus = useFocusReturn({\n  opened: false,\n  shouldReturnFocus: false,\n});\n\n// ... later\nreturnFocus();\n"})}),"\n",(0,o.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"interface UseFocusReturnOptions {\n  opened: boolean;\n  shouldReturnFocus?: boolean;\n}\n\ntype UseFocusReturnReturnValue = () => void;\n\nfunction useFocusReturn(options: UseFocusReturnOptions): UseFocusReturnReturnValue\n"})}),"\n",(0,o.jsx)(n.h2,{id:"exported-types",children:"Exported types"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"UseFocusReturnOptions"})," and ",(0,o.jsx)(n.code,{children:"UseFocusReturnReturnValue"})," types are exported from ",(0,o.jsx)(n.code,{children:"@mantine/hooks"})," package,\nyou can import them in your application:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import type { UseFocusReturnOptions, UseFocusReturnReturnValue } from '@mantine/hooks';\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,o.jsx)(i,{...e,children:(0,o.jsx)(a,{...e})})}},93001:(e,n,s)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/hooks/use-focus-return",function(){return s(86011)}])}},e=>{e.O(0,[38547,69329,57295,90636,46593,38792],()=>e(e.s=93001)),_N_E=e.O()}]);