(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[54222],{1798:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","license","License",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},4473:(e,t,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/styles/vanilla-extract",function(){return n(66831)}])},6620:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","code","Code",[["path",{d:"M7 8l-4 4l4 4",key:"svg-0"}],["path",{d:"M17 8l4 4l-4 4",key:"svg-1"}],["path",{d:"M14 4l-4 16",key:"svg-2"}]])},6892:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","pencil","Pencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},24583:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","arrow-left","ArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},34891:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","adjustments","Adjustments",[["path",{d:"M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-0"}],["path",{d:"M6 4v4",key:"svg-1"}],["path",{d:"M6 12v8",key:"svg-2"}],["path",{d:"M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-3"}],["path",{d:"M12 4v10",key:"svg-4"}],["path",{d:"M12 18v2",key:"svg-5"}],["path",{d:"M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-6"}],["path",{d:"M18 4v1",key:"svg-7"}],["path",{d:"M18 9v11",key:"svg-8"}]])},41949:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","calendar","Calendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},65433:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","switch-2","Switch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},66831:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>c});var s=n(6029),a=n(16285),r=n(38547),l=n(5262);let i=(0,r.P)(l.XZ.VanillaExtract);function o(e){let t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components},{InstallScript:n,TemplatesList:r}=t;return n||d("InstallScript",!0),r||d("TemplatesList",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"vanilla-extract-integration",children:"Vanilla extract integration"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/",children:"Vanilla extract"})," is a TypeScript CSS preprocessor that generates static CSS files at build time.\nIt is a great alternative to ",(0,s.jsx)(t.a,{href:"/styles/css-modules",children:"CSS Modules"})," if you prefer to write your styles in TypeScript."]}),"\n",(0,s.jsx)(t.h2,{id:"vanilla-extract-vs-css-modules",children:"Vanilla extract vs CSS Modules"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/",children:"Vanilla extract"})," and ",(0,s.jsx)(t.a,{href:"/styles/css-modules",children:"CSS Modules"})," do the same thing,\nbut with different syntax. Common features of ",(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/",children:"Vanilla extract"})," and ",(0,s.jsx)(t.a,{href:"/styles/css-modules",children:"CSS Modules"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Styles are generated at build time – no runtime and performance overhead"}),"\n",(0,s.jsx)(t.li,{children:"Classes names are scoped to the styles file"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Differences between ",(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/",children:"Vanilla extract"})," and ",(0,s.jsx)(t.a,{href:"/styles/css-modules",children:"CSS Modules"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Vanilla extract styles are type safe"}),"\n",(0,s.jsxs)(t.li,{children:["You can use any JavaScript/TypeScript code in Vanilla extract styles, including ",(0,s.jsx)(t.a,{href:"/styles/color-functions",children:"color functions"})]}),"\n",(0,s.jsxs)(t.li,{children:["With Vanilla extract you do not have access to ",(0,s.jsx)(t.a,{href:"/styles/postcss-preset",children:"postcss-preset-mantine"})," features like ",(0,s.jsx)(t.code,{children:"light-dark"})," function and ",(0,s.jsx)(t.code,{children:"hover"})," mixin.\nBecause of this, you will not be able to copy-paste all demos from Mantine documentation and use them with Vanilla extract."]}),"\n",(0,s.jsxs)(t.li,{children:["Vanilla extract requires additional configuration and setup that may not be available for your build tool/framework.\nMost popular tools like ",(0,s.jsx)(t.a,{href:"https://nextjs.org/",children:"Next.js"})," and ",(0,s.jsx)(t.a,{href:"https://vitejs.dev/",children:"Vite"})," have plugins for Vanilla extract,\nbut if you are using something more niche, you might need to configure it yourself."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Note that you can use both ",(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/",children:"Vanilla extract"})," and ",(0,s.jsx)(t.a,{href:"/styles/css-modules",children:"CSS Modules"})," in the same project,\nit will not cause any issues: performance will be the same and the bundle size will not be impacted."]}),"\n",(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsxs)(t.p,{children:["Follow the ",(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/documentation/getting-started",children:"installation instructions"})," to install vanilla extract.\nThen install ",(0,s.jsx)(t.code,{children:"@mantine/vanilla-extract"})," package, it exports ",(0,s.jsx)(t.code,{children:"themeToVars"})," function to convert Mantine theme to CSS variables:"]}),"\n",(0,s.jsx)(n,{packages:"@mantine/vanilla-extract"}),"\n",(0,s.jsx)(t.h2,{id:"templates",children:"Templates"}),"\n",(0,s.jsx)(t.p,{children:"You can use one of the following templates to get started or a reference for your own setup.\nNote that all templates include only minimal setup."}),"\n",(0,s.jsx)(r,{name:["vite-vanilla-extract-template","next-vanilla-extract-template"]}),"\n",(0,s.jsx)(t.h2,{id:"theming",children:"Theming"}),"\n",(0,s.jsxs)(t.p,{children:["Vanilla extract provides ",(0,s.jsx)(t.a,{href:"https://vanilla-extract.style/documentation/theming/",children:"createTheme"}),"\nfunction which converts given theme object into CSS variables and assigns them to ",(0,s.jsx)(t.code,{children:":root"})," or other selector.\nYou should not use Vanilla extract ",(0,s.jsx)(t.code,{children:"createTheme"})," to generate Mantine theme tokens – all Mantine ",(0,s.jsx)(t.a,{href:"/theming/theme-object",children:"theme"}),"\nproperties are already exposed as CSS variables. Instead, use ",(0,s.jsx)(t.code,{children:"themeToVars"})," function from ",(0,s.jsx)(t.code,{children:"@mantine/vanilla-extract"})," package\nto create an object with CSS variables from Mantine theme:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// theme.ts\nimport { createTheme } from '@mantine/core';\n\n// Do not forget to pass theme to MantineProvider\nexport const theme = createTheme({\n  fontFamily: 'serif',\n  primaryColor: 'cyan',\n});\n"})}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// theme.css.ts\nimport { theme } from './theme';\nimport { themeToVars } from '@mantine/vanilla-extract';\n\n// CSS variables object, can be access in *.css.ts files\nexport const vars = themeToVars(theme);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"styling",children:"Styling"}),"\n",(0,s.jsxs)(t.p,{children:["Import ",(0,s.jsx)(t.code,{children:"vars"})," object in ",(0,s.jsx)(t.code,{children:"*.css.ts"})," files to access Mantine ",(0,s.jsx)(t.a,{href:"/styles/css-variables",children:"CSS variables"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { vars } from './theme';\n\nexport const demo = style({\n  fontSize: vars.fontSizes.xl,\n  backgroundColor: vars.colors.red[5],\n  color: vars.colors.white,\n});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"rem-and-em",children:"rem and em"}),"\n",(0,s.jsxs)(t.p,{children:["To convert px to ",(0,s.jsx)(t.a,{href:"/styles/rem",children:"rem or em"})," use ",(0,s.jsx)(t.code,{children:"rem"})," and ",(0,s.jsx)(t.code,{children:"em"})," functions from ",(0,s.jsx)(t.code,{children:"@mantine/core"})," package:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { rem } from '@mantine/core';\n\nexport const demo = style({\n  fontSize: rem(16),\n\n  '@media': {\n    [`(min-width: ${em(768)})`]: {\n      fontSize: rem(18),\n    },\n  },\n});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"light-and-dark-selectors",children:"light and dark selectors"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"vars"})," object contains ",(0,s.jsx)(t.code,{children:"lightSelector"})," and ",(0,s.jsx)(t.code,{children:"darkSelector"})," properties which can be used to\napply styles only in light or dark color scheme:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { vars } from './theme';\n\nexport const demo = style({\n  fontSize: vars.fontSizes.xl,\n\n  selectors: {\n    [vars.lightSelector]: {\n      backgroundColor: vars.colors.red[5],\n      color: vars.colors.white,\n    },\n\n    [vars.darkSelector]: {\n      backgroundColor: vars.colors.blue[5],\n      color: vars.colors.white,\n    },\n  },\n});\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Note that usually it is more convenient to use only one of them:\napply styles for light color scheme and then override them for dark color scheme\nwith ",(0,s.jsx)(t.code,{children:"vars.darkSelector"})," (or vice versa):"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { vars } from './theme';\n\nexport const demo = style({\n  fontSize: vars.fontSizes.xl,\n  backgroundColor: vars.colors.red[5],\n  color: vars.colors.white,\n\n  selectors: {\n    [vars.darkSelector]: {\n      backgroundColor: vars.colors.blue[5],\n      color: vars.colors.white,\n    },\n  },\n});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"largerthan-and-smallerthan",children:"largerThan and smallerThan"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"vars"})," object contains ",(0,s.jsx)(t.code,{children:"largerThan"})," and ",(0,s.jsx)(t.code,{children:"smallerThan"})," properties which can be used in\n",(0,s.jsx)(t.code,{children:"@media"})," as a shorthand for ",(0,s.jsx)(t.code,{children:"min-width"})," and ",(0,s.jsx)(t.code,{children:"max-width"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { vars } from './theme';\n\nexport const demo = style({\n  fontSize: vars.fontSizes.sm,\n\n  '@media': {\n    // equivalent to `(min-width: 640px)` converted to em\n    // -> `(min-width: 40em)`\n    [vars.largerThan(640)]: {\n      fontSize: vars.fontSizes.md,\n    },\n\n    // equivalent to `(max-width: 640px)` converted to em\n    // -> `(max-width: 40em)`\n    [vars.smallerThan(640)]: {\n      fontSize: vars.fontSizes.xs,\n    },\n\n    // You can reference `theme.breakpoints` values\n    [vars.largerThan('sm')]: {\n      fontSize: vars.fontSizes.md,\n    },\n  },\n});\n"})}),"\n",(0,s.jsx)(t.h2,{id:"rtl-selector",children:"rtl selector"}),"\n",(0,s.jsxs)(t.p,{children:["Use ",(0,s.jsx)(t.code,{children:"vars.rtlSelector"})," to apply styles only in rtl direction:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",children:"// Demo.css.ts\nimport { style } from '@vanilla-extract/css';\nimport { vars } from './theme';\n\nexport const demo = style({\n  paddingRight: vars.spacing.md,\n\n  selectors: {\n    [vars.rtlSelector]: {\n      paddingLeft: vars.spacing.md,\n      paddingRight: 0,\n    },\n  },\n});\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(i,{...e,children:(0,s.jsx)(o,{...e})})}function d(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},84276:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","file-text","FileText",[["path",{d:"M14 3v4a1 1 0 0 0 1 1h4",key:"svg-0"}],["path",{d:"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z",key:"svg-1"}],["path",{d:"M9 9l1 0",key:"svg-2"}],["path",{d:"M9 13l6 0",key:"svg-3"}],["path",{d:"M9 17l6 0",key:"svg-4"}]])},88992:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});let s=(0,n(41495).A)("outline","arrow-right","ArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])}},e=>{e.O(0,[38547,90636,46593,38792],()=>e(e.s=4473)),_N_E=e.O()}]);