(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[56054],{1798:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","license","License",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},6620:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","code","Code",[["path",{d:"M7 8l-4 4l4 4",key:"svg-0"}],["path",{d:"M17 8l4 4l-4 4",key:"svg-1"}],["path",{d:"M14 4l-4 16",key:"svg-2"}]])},6892:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","pencil","Pencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},20335:(e,n,o)=>{"use strict";o.r(n),o.d(n,{default:()=>c});var r=o(6029),t=o(16285),l=o(38547),a=o(5262);let i=(0,l.P)(a.XZ.ColorFunctions);function s(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"color-functions",children:"Color functions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"@mantine/core"})," package exports several functions that can be used to manipulate colors\nor extract information before using them as CSS value."]}),"\n",(0,r.jsx)(n.h2,{id:"darken-and-lighten",children:"darken and lighten"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"darken"})," and ",(0,r.jsx)(n.code,{children:"lighten"})," functions can be used to manipulate color brightness,\nthey accept color in any format as first argument and the amount of lightness to add/remove as second argument."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { darken, lighten } from '@mantine/core';\n\nlighten('#228BE6', 0.1); // lighten by 10%\n// -> rgba(56, 151, 233, 1)\n\ndarken('rgb(245, 159, 0)', 0.5); // darken by 50%\n// -> rgba(123, 80, 0, 1)\n\ndarken('rgba(245, 159, 0, .3)', 0.5); // darken by 50%\n// -> rgba(123, 80, 0, 1, .3)\n\nlighten('var(--mantine-color-gray-4)', 0.74);\n// -> color-mix(in srgb, var(--mantine-color-gray-4), white 74%)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"alpha",children:"alpha"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"alpha"})," function converts color to rgba format with a given alpha channel,\nit is usually used to make colors more transparent. If it is not possible to convert color to rgba\nformat (for example if color is a CSS variable), the function will use ",(0,r.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix",children:"color-mix"}),".\nNote that ",(0,r.jsx)(n.code,{children:"color-mix"})," is not supported in some older browsers, you can check ",(0,r.jsx)(n.a,{href:"https://caniuse.com/mdn-css_types_color_color-mix",children:"caniuse"}),"\nfor more information."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { alpha } from '@mantine/core';\n\nalpha('#4578FC', 0.45); // -> rgba(69, 120, 252, 0.45)\nalpha('var(--mantine-color-gray-4)', 0.74);\n// -> color-mix(in srgb, var(--mantine-color-gray-4), transparent 26%)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parsethemecolor",children:"parseThemeColor"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"parseThemeColor"})," function returns information about a given color in the following format:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"interface ParseThemeColorResult {\n  /**\n   * True if given color is theme color, for example\n   * `blue`, `orange.9`, `pink.3` are theme colors\n   * `#fff`, `rgba(0, 0, 0, .5)` are not\n   */\n  isThemeColor: boolean;\n\n  /**\n   * Key of `theme.colors` if given color is theme color, for example\n   * if given color is `blue` it will be `blue`,\n   * if given color is `orange.9` it will be `orange`\n   */\n  color: string;\n\n  /**\n   * Resolved color value, for example\n   * if given color is `blue.7` it will be value of `theme.colors.blue[7]`,\n   * if given color is `#fff` it will be `#fff`\n   */\n  value: string;\n\n  /**\n   * If given color is theme color, this will be shade of that color\n   * for example if given color is `blue.7` it will be `7`,\n   * if given color does not have index or is not theme color then it will be `undefined`\n   */\n  shade: MantineColorShade | undefined;\n\n  /**\n   * Color CSS variable, for example\n   * `blue.7` – `--mantine-color-blue-7`,\n   * `red` – `--mantine-color-red-filled`,\n   * `white` – `--mantine-color-white`\n   * `#fff` – `undefined`\n   */\n  variable: CssVariable | undefined;\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"parseThemeColor"})," function can be used everywhere ",(0,r.jsx)(n.code,{children:"theme"})," object is available,\nfor example in ",(0,r.jsx)(n.a,{href:"/styles/css-variables",children:"CSS variables resolver"}),", ",(0,r.jsx)(n.a,{href:"/theming/colors#colors-variant-resolver",children:"variant color resolver"}),"\nor component body:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {\n  MantineColor,\n  parseThemeColor,\n  useMantineTheme,\n} from '@mantine/core';\n\ninterface DemoProps {\n  color: MantineColor;\n}\n\nfunction Demo({ color }: DemoProps) {\n  const theme = useMantineTheme();\n  const parsedColor = parseThemeColor({ color, theme });\n\n  return (\n    <div\n      style={{\n        backgroundColor: parsedColor.isThemeColor\n          ? `var(${parsedColor.variable})`\n          : parsedColor.value,\n      }}\n    />\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getthemecolor",children:"getThemeColor"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"getThemeColor"})," is a simpler version of ",(0,r.jsx)(n.code,{children:"parseThemeColor"})," function, it accepts a color string\nas first argument and theme object as second argument. It returns parsed color value or CSS variable:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { getThemeColor, useMantineTheme } from '@mantine/core';\n\nfunction Demo() {\n  const theme = useMantineTheme();\n\n  getThemeColor('blue', theme); // -> var(--mantine-color-blue-filled)\n  getThemeColor('blue.7', theme); // -> var(--mantine-color-blue-7)\n  getThemeColor('white', theme); // -> var(--mantine-color-white)\n  getThemeColor('#DF78E4', theme); // -> #DF78E4\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getgradient",children:"getGradient"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"getGradient"})," function transforms given ",(0,r.jsx)(n.code,{children:"MantineGradient"})," object to CSS gradient string:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { getGradient, useMantineTheme } from '@mantine/core';\n\nfunction Demo() {\n  const theme = useMantineTheme();\n\n  getGradient({ deg: 180, from: 'blue', to: 'cyan.7' }, theme);\n  // -> `linear-gradient(180deg, var(--mantine-color-blue-filled) 0%, var(--mantine-color-cyan-7) 100%)`\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"islightcolor",children:"isLightColor"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"isLightColor"})," function can be used to achieve better contrast between text and background:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { Box, isLightColor } from '@mantine/core';\n\ninterface DemoProps {\n  color: string;\n}\n\nexport function Demo({ color }: DemoProps) {\n  return (\n    <Box bg={color} c={isLightColor(color) ? 'black' : 'white'}>\n      Box with contrast text\n    </Box>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"luminance",children:"luminance"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"luminance"})," function returns color luminance, it can be used to check colors contrast:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import { luminance } from '@mantine/core';\n\nluminance('#fff'); // -> 1\nluminance('#000'); // -> 0\nluminance('#4578FC'); // -> 0.21726425554966\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(i,{...e,children:(0,r.jsx)(s,{...e})})}},24583:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","arrow-left","ArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},34891:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","adjustments","Adjustments",[["path",{d:"M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-0"}],["path",{d:"M6 4v4",key:"svg-1"}],["path",{d:"M6 12v8",key:"svg-2"}],["path",{d:"M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-3"}],["path",{d:"M12 4v10",key:"svg-4"}],["path",{d:"M12 18v2",key:"svg-5"}],["path",{d:"M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-6"}],["path",{d:"M18 4v1",key:"svg-7"}],["path",{d:"M18 9v11",key:"svg-8"}]])},41949:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","calendar","Calendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},65433:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","switch-2","Switch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},83465:(e,n,o)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/styles/color-functions",function(){return o(20335)}])},84276:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","file-text","FileText",[["path",{d:"M14 3v4a1 1 0 0 0 1 1h4",key:"svg-0"}],["path",{d:"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z",key:"svg-1"}],["path",{d:"M9 9l1 0",key:"svg-2"}],["path",{d:"M9 13l6 0",key:"svg-3"}],["path",{d:"M9 17l6 0",key:"svg-4"}]])},88992:(e,n,o)=>{"use strict";o.d(n,{A:()=>r});let r=(0,o(41495).A)("outline","arrow-right","ArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])}},e=>{e.O(0,[38547,90636,46593,38792],()=>e(e.s=83465)),_N_E=e.O()}]);