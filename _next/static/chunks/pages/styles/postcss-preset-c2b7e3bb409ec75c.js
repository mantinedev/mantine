(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[60460],{1798:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","license","License",[["path",{d:"M15 21h-9a3 3 0 0 1 -3 -3v-1h10v2a2 2 0 0 0 4 0v-14a2 2 0 1 1 2 2h-2m2 -4h-11a3 3 0 0 0 -3 3v11",key:"svg-0"}],["path",{d:"M9 7l4 0",key:"svg-1"}],["path",{d:"M9 11l4 0",key:"svg-2"}]])},6620:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","code","Code",[["path",{d:"M7 8l-4 4l4 4",key:"svg-0"}],["path",{d:"M17 8l4 4l-4 4",key:"svg-1"}],["path",{d:"M14 4l-4 16",key:"svg-2"}]])},6892:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","pencil","Pencil",[["path",{d:"M4 20h4l10.5 -10.5a2.828 2.828 0 1 0 -4 -4l-10.5 10.5v4",key:"svg-0"}],["path",{d:"M13.5 6.5l4 4",key:"svg-1"}]])},14807:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>d});var i=s(6029),r=s(16285),l=s(38547),o=s(5262);let c=(0,l.P)(o.XZ.PostCSSPreset);function t(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{InstallScript:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("InstallScript",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"mantine-postcss-preset",children:"Mantine PostCSS preset"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"postcss-preset-mantine"})," provides several CSS functions and mixins to help you write styles.\nIt is not required to use it, but highly recommended. All demos that feature styles\nassume that you have this preset installed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"postcss-preset-mantine"})," includes the following PostCSS plugins:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/postcss-nested",children:"postcss-nested"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.npmjs.com/package/postcss-mixins",children:"postcss-mixins"})," with Mantine specific mixins"]}),"\n",(0,i.jsxs)(n.li,{children:["Custom plugin with ",(0,i.jsx)(n.code,{children:"em"}),"/",(0,i.jsx)(n.code,{children:"rem"})," functions"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.p,{children:["Install ",(0,i.jsx)(n.code,{children:"postcss-preset-mantine"})," as a dev dependency:"]}),"\n",(0,i.jsx)(s,{dev:!0,packages:"postcss-preset-mantine"}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["Note that setting up PostCSS may be different depending on your build tool/framework, check\na ",(0,i.jsx)(n.a,{href:"/getting-started",children:"dedicated framework guide"})," to learn more.\nAdd ",(0,i.jsx)(n.code,{children:"postcss-preset-mantine"})," to your ",(0,i.jsx)(n.code,{children:"postcss.config.cjs"})," file (usually it is located in the root of your project):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  plugins: {\n    'postcss-preset-mantine': {},\n  },\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"All done! You can now use all the features of the preset."}),"\n",(0,i.jsx)(n.h2,{id:"remem-functions",children:"rem/em functions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"rem"})," and ",(0,i.jsx)(n.code,{children:"em"})," functions can be used to convert pixels to rem/em units.\n",(0,i.jsx)(n.code,{children:"16px = 1rem"})," and ",(0,i.jsx)(n.code,{children:"16px = 1em"}),", ",(0,i.jsx)(n.code,{children:"em"})," values are supposed to be used in media queries,\n",(0,i.jsx)(n.code,{children:"rem"})," everywhere else. You can learn more about units conversions in ",(0,i.jsx)(n.a,{href:"/styles/rem",children:"this guide"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  font-size: rem(16px);\n\n  @media (min-width: em(320px)) {\n    font-size: rem(32px);\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  font-size: calc(1rem * var(--mantine-scale));\n\n  @media (min-width: 20em) {\n    font-size: calc(2rem * var(--mantine-scale));\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"auto-convert-px-to-rem",children:"Auto convert px to rem"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"autoRem"})," option can be used to automatically convert all pixel values to rem units\nin ",(0,i.jsx)(n.code,{children:".css"})," files:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"module.exports = {\n  plugins: {\n    'postcss-preset-mantine': {\n      autoRem: true,\n    },\n  },\n};\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This option works similar to ",(0,i.jsx)(n.code,{children:"rem"})," function. The following code:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  font-size: 16px;\n\n  @media (min-width: 320px) {\n    font-size: 32px;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  font-size: calc(1rem * var(--mantine-scale));\n\n  @media (min-width: 320px) {\n    font-size: calc(2rem * var(--mantine-scale));\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"autoRem"})," converts only CSS properties, values in ",(0,i.jsx)(n.code,{children:"@media"})," queries are\nnot converted automatically – you still need to use ",(0,i.jsx)(n.code,{children:"em"})," function to convert them."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"autoRem"})," option does not convert values in the following cases:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Values in ",(0,i.jsx)(n.code,{children:"calc()"}),", ",(0,i.jsx)(n.code,{children:"var()"}),", ",(0,i.jsx)(n.code,{children:"clamp()"})," and ",(0,i.jsx)(n.code,{children:"url()"})," functions"]}),"\n",(0,i.jsxs)(n.li,{children:["Values in ",(0,i.jsx)(n.code,{children:"content"})," property"]}),"\n",(0,i.jsxs)(n.li,{children:["Values that contain ",(0,i.jsx)(n.code,{children:"rgb()"}),", ",(0,i.jsx)(n.code,{children:"rgba()"}),", ",(0,i.jsx)(n.code,{children:"hsl()"}),", ",(0,i.jsx)(n.code,{children:"hsla()"})," colors"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you want to convert above values to rem units, use ",(0,i.jsx)(n.code,{children:"rem"})," function manually."]}),"\n",(0,i.jsx)(n.h2,{id:"dark-and-light-mixins",children:"dark and light mixins"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"dark"})," and ",(0,i.jsx)(n.code,{children:"light"})," mixins can be used to create styles that will be applied only in dark or light color scheme."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin light {\n    color: red;\n  }\n\n  @mixin dark {\n    color: blue;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"[data-mantine-color-scheme='light'] .demo {\n  color: red;\n}\n\n[data-mantine-color-scheme='dark'] .demo {\n  color: blue;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that usually you do not need to use both ",(0,i.jsx)(n.code,{children:"light"})," and ",(0,i.jsx)(n.code,{children:"dark"})," mixins at the same time.\nIt is easier to define styles for light color scheme and then use ",(0,i.jsx)(n.code,{children:"dark"})," mixin to override them in dark color scheme."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  // Value for light color scheme\n  color: red;\n\n  @mixin dark {\n    // Value for dark color scheme\n    color: blue;\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["To define values for light/dark color scheme on the ",(0,i.jsx)(n.code,{children:":root"}),"/",(0,i.jsx)(n.code,{children:"html"})," element, use ",(0,i.jsx)(n.code,{children:"light-root"})," and ",(0,i.jsx)(n.code,{children:"dark-root"})," mixins instead:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:":root {\n  @mixin light-root {\n    --color: red;\n  }\n\n  @mixin dark-root {\n    --color: blue;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"smaller-than-and-larger-than-mixins",children:"smaller-than and larger-than mixins"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"smaller-than"})," and ",(0,i.jsx)(n.code,{children:"larger-than"})," mixins can be used to create styles that will be applied only when the screen is smaller or larger than specified breakpoint."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin smaller-than 320px {\n    color: red;\n  }\n\n  @mixin larger-than 320px {\n    color: blue;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"// Breakpoint values are converted to em units\n// In smaller-than mixin 0.1px is subtracted from breakpoint value\n// to avoid intersection with larger-than mixin\n@media (max-width: 19.99375em) {\n  .demo {\n    color: red;\n  }\n}\n\n@media (min-width: 20em) {\n  .demo {\n    color: blue;\n  }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You can also use ",(0,i.jsx)(n.code,{children:"smaller-than"})," and ",(0,i.jsx)(n.code,{children:"larger-than"})," mixins with ",(0,i.jsx)(n.a,{href:"/styles/responsive/#breakpoints-variables-in-css-modules",children:"mantine breakpoints"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin smaller-than $mantine-breakpoint-sm {\n    color: red;\n  }\n\n  @mixin larger-than $mantine-breakpoint-sm {\n    color: blue;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"light-dark-function",children:"light-dark function"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"light-dark"})," function is an alternative to ",(0,i.jsx)(n.code,{children:"light"})," and ",(0,i.jsx)(n.code,{children:"dark"})," mixins. It accepts two arguments:\nfirst argument is rule that will be applied in light color scheme, second argument is rule that will be applied in dark color scheme."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".demo {\n  color: light-dark(red, blue);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".demo {\n  color: red;\n}\n\n[data-mantine-color-scheme='dark'] .demo {\n  color: blue;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note that ",(0,i.jsx)(n.code,{children:"light-dark"})," function does not work on ",(0,i.jsx)(n.code,{children:":root"}),"/",(0,i.jsx)(n.code,{children:"html"})," element. Use ",(0,i.jsx)(n.code,{children:"light-root"})," and ",(0,i.jsx)(n.code,{children:"dark-root"})," mixins instead:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"// ❌ Does not work\n:root {\n  --color: light-dark(red, blue);\n}\n\n// ✅ Works\n:root {\n  @mixin light-root {\n    --color: red;\n  }\n\n  @mixin dark-root {\n    --color: blue;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"alpha-function",children:"alpha function"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"alpha"})," function can be used to add alpha channel to color. Note that it uses ",(0,i.jsx)(n.a,{href:"https://caniuse.com/mdn-css_types_color_color-mix",children:"color-mix"})," which is not supported in some older browsers."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  color: alpha(var(--mantine-color-red-4), 0.5);\n  border: 1px solid alpha(#ffc, 0.2);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  color: color-mix(\n    in srgb,\n    var(--mantine-color-red-4),\n    transparent 50%\n  );\n  border: 1px solid color-mix(in srgb, #ffc, transparent 80%);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"lighten-and-darken-functions",children:"lighten and darken functions"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"lighten"})," and ",(0,i.jsx)(n.code,{children:"darken"})," functions work similar to ",(0,i.jsx)(n.code,{children:"alpha"})," function, but instead of adding alpha channel they add white or black color to the color with ",(0,i.jsx)(n.a,{href:"https://caniuse.com/mdn-css_types_color_color-mix",children:"color-mix"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  color: lighten(var(--mantine-color-red-4), 0.5);\n  border: 1px solid darken(#ffc, 0.2);\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  color: color-mix(in srgb, var(--mantine-color-red-4), white 50%);\n  border: 1px solid color-mix(in srgb, #ffc, black 20%);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"hover-mixin",children:"hover mixin"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"hover"})," mixin can be used to create styles that will be applied on hover."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".demo {\n  @mixin hover {\n    color: orange;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"@media (hover: hover) {\n  .demo:hover {\n    color: orange;\n  }\n}\n\n@media (hover: none) {\n  .demo:active {\n    color: orange;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"rtlltr-mixins",children:"rtl/ltr mixins"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"rtl"})," mixin can be used to create styles that will be applied when ",(0,i.jsx)(n.code,{children:'dir="rtl"'})," is set on parent element (usually ",(0,i.jsx)(n.code,{children:"<html />"}),")."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  margin-left: 1rem;\n\n  @mixin rtl {\n    margin-left: 0;\n    margin-right: 1rem;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".demo {\n  margin-left: 1rem;\n}\n\n[dir='rtl'] .demo {\n  margin-left: 0;\n  margin-right: 1rem;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ltr"})," mixin works the same way, but for ",(0,i.jsx)(n.code,{children:'dir="ltr"'}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  margin-left: 1rem;\n\n  @mixin ltr {\n    margin-left: 0;\n    margin-right: 1rem;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:".demo {\n  margin-left: 1rem;\n}\n\n[dir='ltr'] .demo {\n  margin-left: 0;\n  margin-right: 1rem;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"not-rtlnot-ltr-mixins",children:"not-rtl/not-ltr mixins"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"not-rtl"}),"/",(0,i.jsx)(n.code,{children:"not-ltr"})," mixins can be used to create styles that will be applied when the direction is set to the opposite value or not set at all.\nFor example, ",(0,i.jsx)(n.code,{children:"not-rtl"})," styles will be applied when ",(0,i.jsx)(n.code,{children:'dir="ltr"'})," or when ",(0,i.jsx)(n.code,{children:"dir"})," is not set at all."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin not-rtl {\n    margin-right: 1rem;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:":root:not([dir='rtl']) .demo {\n  margin-right: 1rem;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"where--mixins",children:"where-* mixins"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"where-*"})," mixins are alternative to ",(0,i.jsx)(n.code,{children:"light"}),", ",(0,i.jsx)(n.code,{children:"dark"}),", ",(0,i.jsx)(n.code,{children:"rlt"})," and ",(0,i.jsx)(n.code,{children:"hover"})," mixins.\nThey work exactly the same, but produced CSS is less specific. These mixins are\nuseful when you want to easily override styles, for example, when you are building\na library or extension."]}),"\n",(0,i.jsxs)(n.p,{children:["Example of using ",(0,i.jsx)(n.code,{children:"where-light"})," mixin:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin where-light {\n    color: red;\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will be transformed to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:":where([data-mantine-color-scheme='light']) .demo {\n  color: red;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"custom-mixins",children:"Custom mixins"}),"\n",(0,i.jsxs)(n.p,{children:["You can define custom mixins that are not included in the preset by specifying them\nin the ",(0,i.jsx)(n.code,{children:"mixins"})," option. To learn about mixins syntax, follow ",(0,i.jsx)(n.a,{href:"https://github.com/postcss/postcss-mixins#readme",children:"postcss-mixins documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Example of adding ",(0,i.jsx)(n.code,{children:"clearfix"})," and ",(0,i.jsx)(n.code,{children:"circle"})," mixins:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"module.exports = {\n  plugins: {\n    'postcss-preset-mantine': {\n      autoRem: true,\n      mixins: {\n        clearfix: {\n          '&::after': {\n            content: '\"\"',\n            display: 'table',\n            clear: 'both',\n          },\n        },\n        circle: (_mixin, size) => ({\n          borderRadius: '50%',\n          width: size,\n          height: size,\n        }),\n      },\n    },\n    // ... Other plugins\n  },\n};\n"})}),"\n",(0,i.jsx)(n.p,{children:"Then you can use these mixins in your styles:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:".demo {\n  @mixin clearfix;\n  @mixin circle 100px;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"disable-specific-features",children:"Disable specific features"}),"\n",(0,i.jsxs)(n.p,{children:["You can disable specific features of the preset by setting them to ",(0,i.jsx)(n.code,{children:"false"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"module.exports = {\n  'postcss-preset-mantine': {\n    features: {\n      // Turn off `light-dark` function\n      lightDarkFunction: false,\n\n      // Turn off `postcss-nested` plugin\n      nested: false,\n\n      // Turn off `lighten`, `darken` and `alpha` functions\n      colorMixAlpha: false,\n\n      // Turn off `rem` and `em` functions\n      remEmFunctions: false,\n\n      // Turn off `postcss-mixins` plugin\n      mixins: false,\n    },\n  },\n};\n"})})]})}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,i.jsx)(c,{...e,children:(0,i.jsx)(t,{...e})})}},24583:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","arrow-left","ArrowLeft",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M5 12l6 6",key:"svg-1"}],["path",{d:"M5 12l6 -6",key:"svg-2"}]])},34891:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","adjustments","Adjustments",[["path",{d:"M4 10a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-0"}],["path",{d:"M6 4v4",key:"svg-1"}],["path",{d:"M6 12v8",key:"svg-2"}],["path",{d:"M10 16a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-3"}],["path",{d:"M12 4v10",key:"svg-4"}],["path",{d:"M12 18v2",key:"svg-5"}],["path",{d:"M16 7a2 2 0 1 0 4 0a2 2 0 0 0 -4 0",key:"svg-6"}],["path",{d:"M18 4v1",key:"svg-7"}],["path",{d:"M18 9v11",key:"svg-8"}]])},41949:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","calendar","Calendar",[["path",{d:"M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z",key:"svg-0"}],["path",{d:"M16 3v4",key:"svg-1"}],["path",{d:"M8 3v4",key:"svg-2"}],["path",{d:"M4 11h16",key:"svg-3"}],["path",{d:"M11 15h1",key:"svg-4"}],["path",{d:"M12 15v3",key:"svg-5"}]])},65433:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","switch-2","Switch2",[["path",{d:"M3 17h5l1.67 -2.386m3.66 -5.227l1.67 -2.387h6",key:"svg-0"}],["path",{d:"M18 4l3 3l-3 3",key:"svg-1"}],["path",{d:"M3 7h5l7 10h6",key:"svg-2"}],["path",{d:"M18 20l3 -3l-3 -3",key:"svg-3"}]])},84276:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","file-text","FileText",[["path",{d:"M14 3v4a1 1 0 0 0 1 1h4",key:"svg-0"}],["path",{d:"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z",key:"svg-1"}],["path",{d:"M9 9l1 0",key:"svg-2"}],["path",{d:"M9 13l6 0",key:"svg-3"}],["path",{d:"M9 17l6 0",key:"svg-4"}]])},88992:(e,n,s)=>{"use strict";s.d(n,{A:()=>i});let i=(0,s(41495).A)("outline","arrow-right","ArrowRight",[["path",{d:"M5 12l14 0",key:"svg-0"}],["path",{d:"M13 18l6 -6",key:"svg-1"}],["path",{d:"M13 6l6 6",key:"svg-2"}]])},98401:(e,n,s)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/styles/postcss-preset",function(){return s(14807)}])}},e=>{e.O(0,[38547,90636,46593,38792],()=>e(e.s=98401)),_N_E=e.O()}]);